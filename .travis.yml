os:
  - linux
  - osx

# boards are ordered by priority so that when monitoring a build developers get feedback on the important ones first.
env:
  - RUNTESTS=True
  - PUBLISHMETA=True
  - PUBLISHDOCS=True
  - TARGET=SPRACINGF3MINI
  - TARGET=SPRACINGF3EVO
  - TARGET=SPRACINGF3NEO
  - TARGET=SPRACINGF3
  - TARGET=SPRACINGF3OSD
  - TARGET=SPRACINGF1OSD
  - TARGET=NAZE
  - TARGET=CC3D
  - TARGET=CJMCU
  - TARGET=SPARKY
  - TARGET=COLIBRI_RACE
  - TARGET=LUX_RACE  
  - TARGET=MOTOLAB
  - TARGET=RMDO
  - TARGET=ALIENFLIGHTF3
  - TARGET=ALIENFLIGHTF1
  - TARGET=STM32F3DISCOVERY
  - TARGET=PORT103R
  - TARGET=CHEBUZZF3
  - TARGET=IRCFUSIONF3
  - TARGET=RCEXPLORERF3

# use new docker environment
sudo: false

addons:
  apt:
    packages:
      - build-essential
      - git
      - lcov
      - libc6-i386
      - zlib1g-dev
      - libssl-dev
      - wkhtmltopdf
      - libxml2-dev
      - libxslt-dev
      - ccache

# We use cpp for unit tests, and c for the main project.
language: cpp
compiler: clang

matrix:
  exclude:
    # OSX: Only run the tests
    - os: osx
      env: PUBLISHMETA=True
    - os: osx
      env: PUBLISHDOCS=True
    - os: osx
      env: TARGET=SPRACINGF3MINI
    - os: osx
      env: TARGET=SPRACINGF3EVO
    - os: osx
      env: TARGET=SPRACINGF3NEO
    - os: osx
      env: TARGET=SPRACINGF3
    - os: osx
      env: TARGET=SPRACINGF3OSD
    - os: osx
      env: TARGET=SPRACINGF1OSD
    - os: osx
      env: TARGET=NAZE
    - os: osx
      env: TARGET=CC3D
    - os: osx
      env: TARGET=CJMCU
    - os: osx
      env: TARGET=SPARKY
    - os: osx
      env: TARGET=COLIBRI_RACE
    - os: osx
      env: TARGET=LUX_RACE
    - os: osx
      env: TARGET=MOTOLAB
    - os: osx
      env: TARGET=RMDO
    - os: osx
      env: TARGET=ALIENFLIGHTF3
    - os: osx
      env: TARGET=ALIENFLIGHTF1
    - os: osx
      env: TARGET=STM32F3DISCOVERY
    - os: osx
      env: TARGET=PORT103R
    - os: osx
      env: TARGET=CHEBUZZF3
    - os: osx
      env: TARGET=IRCFUSIONF3
    - os: osx
      env: TARGET=RCEXPLORERF3
    
before_install:
  # LINUX
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then curl --retry 10 --retry-max-time 120 -L "https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q2-update/+download/gcc-arm-none-eabi-5_4-2016q2-20160622-linux.tar.bz2" | tar xfj -; fi
  # OSX
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update && brew install lcov ; fi

install:
  - export PATH=$PATH:$PWD/gcc-arm-none-eabi-5_4-2016q2/bin

before_script:
  # LINUX
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then arm-none-eabi-gcc --version; fi

script:
  - ./.travis.sh

cache:
  - apt
  - ccache

notifications:
  irc:
    channels: "chat.freenode.net#cleanflight"
    use_notice: true
    skip_join: true
